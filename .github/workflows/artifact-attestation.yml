name: Artifact Attestation Example

on:
  workflow_call:
env:
  BUNDLE_NAME: example-artifact
jobs:
  build-and-attest:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      attestations: write
    outputs:
      artifact-url: ${{ steps.upload.outputs.artifact-url }}
    steps:
      - name: Check if artifact already exists in this run
        id: check-artifact
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          echo "::debug::Checking for existing artifact named '${BUNDLE_NAME}' in current run ${GITHUB_RUN_ID}"
          names=$(gh api \
            -H "Accept: application/vnd.github+json" \
            /repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/artifacts \
            -q '.artifacts[].name' || true)
          if echo "${names}" | grep -qx "${BUNDLE_NAME}"; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
            echo "### Artifact already exists âœ…" >> "$GITHUB_STEP_SUMMARY"
            echo "Skipping build and upload in this invocation." >> "$GITHUB_STEP_SUMMARY"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Checkout repository
        if: ${{ steps.check-artifact.outputs.exists != 'true' }}
        uses: actions/checkout@v4

      - name: Create artifact file
        if: ${{ steps.check-artifact.outputs.exists != 'true' }}
        run: echo "Hello, Arkanoid!" > artifact.txt

      - name: Generate artifact attestation (build provenance)
        if: ${{ steps.check-artifact.outputs.exists != 'true' }}
        uses: actions/attest-build-provenance@v3
        with:
          subject-path: 'artifact.txt'
          subject-name: 'krical'
          show-summary: false

      - name: Upload artifact
        if: ${{ steps.check-artifact.outputs.exists != 'true' }}
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BUNDLE_NAME }}
          path: artifact.txt

  validate:
    needs: build-and-attest
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.BUNDLE_NAME }}
      - name: Validate artifact attestation
        run: |
          gh attestation verify ${{ env.ARTIFACT_PATH }} --owner christian-calabrese --signer-workflow christian-calabrese/ArkaPoyd/.github/workflows/artifact-attestation.yml
        env:
          ARTIFACT_PATH: "./artifact.txt"
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SUBJECT_NAME: 'dx'
          EXPECTED_JOB: ${{ github.job }}